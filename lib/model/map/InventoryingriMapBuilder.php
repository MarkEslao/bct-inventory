<?php


/**
 * This class adds structure of 'inventoryingri' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * 11/26/20 14:41:41
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class InventoryingriMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.InventoryingriMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(InventoryingriPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(InventoryingriPeer::TABLE_NAME);
		$tMap->setPhpName('Inventoryingri');
		$tMap->setClassname('Inventoryingri');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addColumn('NAME', 'Name', 'VARCHAR', true, 255);

		$tMap->addColumn('BARCODE', 'Barcode', 'VARCHAR', false, 255);

		$tMap->addColumn('REORDER', 'Reorder', 'VARCHAR', false, 255);

		$tMap->addColumn('WAREHOUSE', 'Warehouse', 'VARCHAR', false, 255);

		$tMap->addColumn('QTY', 'Qty', 'VARCHAR', false, 255);

		$tMap->addColumn('VATIN', 'Vatin', 'DECIMAL', true, null);

		$tMap->addColumn('VATEX', 'Vatex', 'DECIMAL', true, null);

		$tMap->addColumn('SELPRICE', 'Selprice', 'DECIMAL', true, null);

		$tMap->addColumn('VATIN1', 'Vatin1', 'DECIMAL', false, null);

		$tMap->addColumn('VATEX1', 'Vatex1', 'DECIMAL', false, null);

		$tMap->addColumn('WOLPRICE', 'Wolprice', 'DECIMAL', false, null);

		$tMap->addColumn('WOLQTY', 'Wolqty', 'VARCHAR', false, 255);

		$tMap->addColumn('PRICE', 'Price', 'DECIMAL', true, null);

		$tMap->addColumn('UOM', 'Uom', 'VARCHAR', false, 255);

		$tMap->addColumn('POUOM', 'Pouom', 'VARCHAR', false, 255);

		$tMap->addColumn('CON1', 'Con1', 'VARCHAR', false, 255);

		$tMap->addColumn('CON2', 'Con2', 'VARCHAR', false, 255);

		$tMap->addColumn('CATEGORY', 'Category', 'VARCHAR', false, 255);

		$tMap->addColumn('TYPE', 'Type', 'VARCHAR', false, 255);

		$tMap->addColumn('FILE', 'File', 'VARCHAR', false, 255);

		$tMap->addColumn('SENIOR', 'Senior', 'BOOLEAN', false, null);

		$tMap->addColumn('NONSTOCK', 'Nonstock', 'BOOLEAN', false, null);

		$tMap->addColumn('ACTIVE', 'Active', 'VARCHAR', false, 255);

		$tMap->addColumn('ADDONS', 'Addons', 'VARCHAR', false, 255);

		$tMap->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

	} // doBuild()

} // InventoryingriMapBuilder
